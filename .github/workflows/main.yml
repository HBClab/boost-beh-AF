name: Task1 QC
on:
  push:
    branches:
      - main

jobs:
  process_raw:
    runs-on: self-hosted
    steps:
      - name: checkout code and return recently uploaded file in /data
        uses: actions/checkout@v2
      - name: Get changed files
        run: |
          git pull origin main
          # Check if there is at least one previous commit
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            # Get the list of CSV files changed in the last commit
            data=$(git diff --name-only HEAD~1 HEAD -- '*.csv')
            echo "data=$data" >> $GITHUB_ENV
            echo "Changed CSV files: $data"
          else
            echo "No previous commit found."
            echo "data=" >> $GITHUB_ENV
          fi


      - name: set up python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: parse raw
        run: |
          #!/bin/bash
          # Loop through each CSV file in $data
          for file in $data; do
              filename=$(basename "$file")
              IFS='_' read -r sub task version <<< "$filename"
              echo "sub=$sub" >> $GITHUB_ENV
              echo "task=$task" >> $GITHUB_ENV
              echo "version=$version" >> $GITHUB_ENV
              echo "Subject: $sub"
              echo "Task: $task"
              echo "Version: $version"
          done

  run_qc:
    runs-on: self-hosted
    needs: process_raw
    steps:
      - name: run quality control
        run: python AFqC.py -s data/$sub/processed/${sub}*.csv -o data/$sub/ -sub $sub | tee data/$sub/qc.log

  push:
    runs-on: self-hosted
    needs: run_qc
    steps:
      - name: Commit and Push Changes
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "Automated commit by GitHub Actions"
            git push
        env:
            GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
